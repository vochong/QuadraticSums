from group42 import *

"""
For the output to be correct the prime p should equal 1 mod 80    
and 25 should not be a divisor of p-1.
This shows 7 equations that are derived involving quadratic sums
modulo p involving the group generated by g and the group generated by g^25.
These equations are stored in the 12x12 matrix m and the vector b3.
The first three equations stored in m[0],m[1], and m[2] are obvious
based on commonly known theorems involving quadratic sums.  However
the last 4 equations m[3] through m[6] are not as obvious.
"""


# p = 3761

p = 3121

k = group(0,p)

flag4 = 0
g = k.g
k = group(exp1(1,g,p),p)

d4 = 2
q = (p-1)//(2*d4)
k12 = k.k20(1,q,2*d4)
print(k12)
m = init1(12,12)
a3 = exp2a((p-1)//5,k.a2,p)
s = (4*a3[0]+1)%p
t1 = (q//5)%5
if (t1==1 or t1==4):
    s = p-s
print("\n \n s = ",s)


m[0] = [p-2,2,p-2,2,p-1,1,
        0,0,0,0,0,0]
m[1] = [0,0,0,0,0,0,
        p-2,2,p-2,2,p-1,1]

if flag4==1:
    m[0] = [p-2,p-2,p-2,p-2,p-1,p-1,
            0,0,0,0,0,0]
    m[1] = [0,0,0,0,0,0,
            p-2,p-2,p-2,p-2,p-1,p-1]    

m[2] = [0,2,0,2,0,1,
        0,2*s,0,2*s,0,s]

e = 2*q//5
a3 = exp2a(2*d4*e**2,k.a2,p)
print("\n \n a3 = ",a3)
c1 = a3[0]
s1 = a3[1]
m[3] = [3*c1+1,p-s1,3*c1+1,s1,2*c1,0,
        p-5,0,p-5,0,0,0]

m[4] = [s1,3*c1+1,p-s1,3*c1+1,0,2*c1,
        0,p-5,0,p-5,0,0]
        
c2 = c1
s2 = p-s1
m[5] = [c2+1,s2,2*c2,0,c2,p-s2,
        p-5,0,0,0,0,0]

m[6] = [p-s2,c2+1,0,2*c2,s2,c2,
        0,p-5,0,0,0,0]


m[7] = [1562,227,1155,496,2716,269,
        0,0,0,0,0,0]

m[8] = [1,0,0,0,0,0,
        0,0,0,0,0,0]

m[9] = [0,0,0,0,0,0,
        1,0,0,0,0,0]

t1 = 1966//2
t2 = (p-42)//2
c = p-1966
# c = p-2715
m[10] = [c,0,t1,t2,t1,t2,
         0,0,0,0,0,0]

m[11] = [0,0,0,0,0,0,
         0,0,0,0,0,0]


b2 = init2(12)
for i in range(12):
    b2[i] = multcnvl2(m[i],k12,p)

b3 = init2(12)
a3 = exp2a(4*q//5,k.a2,p)
a4 = exp2a(2*q//5,k.a2,p)
q1 = q//20
print("\n \n q = ",q,"  q1 = ",q1," a3 = ",a3,"  a4  =",a4)

t1 = 0
if (q1%5)==1:
    t2 = p-a3[1]
    t1 = (a4[1]+t2)%p
    
if (q1%5)==4:
    t2 = p-a4[1]
    t1 = (a3[1]+t2)%p
    
if (q1%5)==2:
    t1 = (a3[1]+a4[1])%p
    t1 = p-t1

if (q1%5)==3:
    t1 = (a3[1]+a4[1])%p

if ((d4==1) and ((q1%5)==1 or (q1%5)==4)):
    t1 = p-t1

t2 = q//5
e = (t2-(t2%5))//5
e = 2*e+1
print("\n \n e = ",e)

s1 = 3
s2 = 0
g1 = exp1(25,k.g,p)
k1 = group(g1,p)
h1 = k1.series(e,e,0,2*d4)
if ((q1%5)==1 or (q1%5)==2):
    s1 = (5*h1[0]+3)%p
    s2 = (5*h1[1])%p
print("\n \n s1 = ",s1,"  s2 = ",s2)
    
b3 = [1,1,0,s1,s2,(p+3)//2,t1,
      0,0,0,0,0]

print("\n \n k12 = ",k12)
print("\n b2 = ",b2)
print("\n b3 = ",b3)
print("\n \n")


v1 = init2(12)

print("\n \n")
display(0,11,0,11,m,b3)

h1 = [0 for i in range(12)]

solve2(12,m,v1,p)
t1 = det(12,m)
print("\n \n det = ",t1)
display(0,11,0,11,m,v1)
l2solve(12,h1,v1,m,p)
print("after solve2 = ",h1)
print("\n \n")


e = (p-1)//10
h1 = k.series3(e,0*e,2)
h2 = k.series3(e,4*e,2)
h3 = k.series3(e,8*e,2)
a3 = exp2a(e*e,k.a2,p)

c = a3[0]
s = a3[1]

t1 = (c*h1[0]+s*h1[1])%p
t2 = ((p-s)*h1[0]+c*h1[1])%p
a4 = [t1,t2]

t1 = (c*h2[0]+s*h2[1])%p
t2 = ((p-s)*h2[0]+c*h2[1])%p
a5 = [t1,t2]

t1 = (c*h3[0]+s*h3[1])%p
t2 = ((p-s)*h3[0]+c*h3[1])%p
a6 = [t1,t2]
print("\n \n p = ",p)
print("\n \n a4 = ",a4,"   a5 = ",a5,"   a6 = ",a6)

s1 = [(a4[0]+2*a5[0]+2*a6[0])%p,(a4[1]+2*a5[1]+2*a6[1])%p]

h1 = k.series1(1,e//2,5,0,4)
h2 = k.series1(2,e//2,5,0,4)
h3 = k.series1(3,e//2,5,0,4)
h4 = k.series1(4,e//2,5,0,4)

temp1 = [1*(h1[0]+h4[0])%p,1*(h1[1]+h4[1])%p]
temp2 = [1*(h2[0]+h3[0])%p,1*(h2[1]+h3[1])%p]
temp3 = k.series1(0,e//2,5,0,4)
print("\n t1 = ",temp1,"   t2 = ",temp2,"   t3 = ",temp3)

s2 = [5*(h1[0]+h4[0])%p,5*(h1[1]+h4[1])%p]
s3 = [5*(h2[0]+h3[0])%p,5*(h2[1]+h3[1])%p]

print("\n \n s1 = ",s1)
print("\n s2(1,4) = ",s2,"   s3(2,3) = ",s3)

h1 = k.series(0,e//2,8*e,4)
h2 = k.series(0,e//2,0,4)
print("\n \n h1 = ",h1)
print("\n h2 = ",h2)
a3 = exp2a(8*e,k.a2,p)
a4 = exp2a(2,a3,p)
sq5 = 2*(a3[0]+(p-1)*a4[0])%p
print("\n \n a3 = ",a3,"   a4 = ",a4,"  sq5 = ",sq5)

e1 = (p-1)//20
if e1%5==1 or e1%5==4:
    t1 = a4[0]*h2[0]%p
    t2 = a4[0]*h2[1]%p
    s4 = [(h1[0]+(p-1)*t1)%p,(h1[1]+(p-1)*t2)%p]
    t3 = 2*sq5%p
    s4[0] = t3*s4[0]%p
    s4[1] = t3*s4[1]%p
    print("\n \n s4 = ",s4)

    t1 = (1+(p-1)*a4[0])%p
    t1 = 2*sq5*t1%p
    print("\n t1 = ",t1)
    s5 = [t1*temp3[0]%p,t1*temp3[1]%p]
    print("\n s5 = ",s5)

if e1%5==2 or e1%5==3:
    sq5 = p-sq5
    t1 = a3[0]*h2[0]%p
    t2 = a3[0]*h2[1]%p
    s4 = [(h1[0]+(p-1)*t1)%p,(h1[1]+(p-1)*t2)%p]
    t3 = 2*sq5%p
    s4[0] = t3*s4[0]%p
    s4[1] = t3*s4[1]%p
    print("\n \n s4 = ",s4)

    t1 = (1+(p-1)*a3[0])%p
    t1 = 2*sq5*t1%p
    print("\n t1 = ",t1)
    s5 = [t1*temp3[0]%p,t1*temp3[1]%p]
    print("\n s5 = ",s5)

