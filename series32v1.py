from group45 import*

def equation22(a4,m,b1,t,q,p):
    q1 = q//16
    a5 = cmult(a4,a4,p)
    s = a5[0]
    print("\n \n in equation22 a4 = {0} a5 = {1}  s = {2}".format(a4,a5,s))

    if (q1%4)==3:
        print("\n in equation22 q1 = ",q1)
        if (q1%8)==7:
            s = (p-s)%p
        t1 = (a4[0]+a4[1])%p
        t1 = (s*t1)%p
        print("\n in equation22 t1 = ",t1)
        t1 = (2*t1)%p
        m[t] = [2,0,p-2,0,  p-2,0,2,0,
                t1,0,t1,0,  0,t1,0,t1]
        t1 = 1
        if (q1%8)==3:
            t1 = p-1
        b1[t] = (t1*a4[0])%p

    if (q1%4)==1:
        print("\n in equation22 q1 = ",q1)
        if (q1%8)==1:
            s = (p-s)%p
        t1 = (a4[0]+a4[1])%p
        t1 = (s*t1)%p
        print("\n in equation22 t1 = ",t1)
        t1 = (2*t1)%p
        m[t] = [2,0,p-2,0,  p-2,0,2,0,
                0,t1,0,t1,  t1,0,t1,0]
        b1[t] = 0


def equation23(a2,m,b1,t,q,p):
    q1 = q//16
    a4 = exp2a(2*q1*q1,a2,p)
    a5 = cmult(a4,a4,p)
    s = a5[0]
    print("\n \n in equation23 a4 = {0} a5 = {1}  s = {2}".format(a4,a5,s))

    a4[0] = (p-a4[0])%p
    a4[1] = (p-a4[1])%p
    t1 = (p-a4[1])%p
    t2 = a4[0]
    t3 = (p-1)//2
    c1 = (t3*t1)%p
    s1 = (t3*t2)%p
    c2 = (p-s1)
    s2 = c1
    print("\n in equation23 for e1 (c1,s1) = ({0} , {1})".format(c1,s1))
    print("\n in equation23 for e2 (c2,s2) = ({0} , {1})".format(c2,s2))
    a4[0] = (p-a4[0])%p
    a4[1] = (p-a4[1])%p

    # equations
    a5 = exp2a(12*q1,a2,p)
    s = (2*a5[1])%p
    print("\n for equation23 s = ",s)
    m[t+2] = [s,0,s,0,      p-s,0,p-s,0,
              p-1,0,1,0,    0,p-1,0,1]

    m[t+3] = [0,s,0,s,      0,p-s,0,p-s,
              0,p-1,0,1,    1,0,p-1,0]

    if (q1%4)==1:
        m[t+4] = [2,0,2,0,          2,0,2,0,
                  p-2,2,p-2,2,      p-2,p-2,p-2,p-2]
        
        m[t+5] = [0,2,0,2,          0,2,0,2,
                  p-2,p-2,p-2,p-2,  2,p-2,2,p-2]

    if (q1%4)==3:
        m[t+4] = [2,0,2,0,          2,0,2,0,
                  p-2,p-2,p-2,p-2,  p-2,2,p-2,2]

        m[t+5] = [0,2,0,2,          0,2,0,2,
                  2,p-2,2,p-2,      p-2,p-2,p-2,p-2]

    for i in range(16):
        t1 = m[t+4][i]
        t2 = m[t+5][i]
        t3 = (c1*t1)%p
        t4 = (s1*t2)%p
        t3 = (t3+t4)%p
        t4 = m[t+2][i]
        t4 = (p-t4)%p
        t3 = (t3+t4)%p
        m[t][i] = t3

        t3 = (c2*t1)%p
        t4 = (s2*t2)%p
        t3 = (t3+t4)%p
        t4 = m[t+3][i]
        t4 = (p-t4)%p
        t3 = (t3+t4)%p
        m[t+1][i] = t3

    b1[t] = 0
    b1[t+1] = 0

    for i in range(16):
        m[t+2][i] = 0
        m[t+3][i] = 0
        m[t+4][i] = 0
        m[t+5][i] = 0
        
 
def init32(k,q):
    # q = order of group generated by (k.g)^2 mod p
    p = k.p
    a2 = k.a2
    m = init1(16,16)
    b1 = init2(16)

    if (q%32!=16):
        print("\n \n error in init32 q should equal 16 (mod 32)")

    e1 = q//16
    a4 = exp2a(2*e1*e1,a2,p)
    print("\n \n in init32 a4 = ",a4)

    q1 = q//16
    t1 = (a4[0]+a4[1])%p
    t2 = (p-a4[1])%p
    t2 = (a4[0]+t2)%p
    if (q1%4)==1:
        m[0] = [0,0,0,0, 0,0,0,0,
                1,0,1,0, 0,p-1,0,p-1]
        b1[0] = 0

        t3 = (2*t2)%p
        t4 = (p-t3)%p
        t6 = (2*t1)%p
        t5 = (p-t6)%p
        m[1] = [t3,t5,t4,t6,  t4,t6,t3,t5,
                0,0,0,0,      0,0,0,0]

        t3 = (t1*a4[1])%p
        t4 = (t2*a4[0])%p         
        print("\n \n in init32 t3 = {0} t4 = {1}".format(t3,t4))
        t4 = (p-t4)%p
        t4 = (t3+t4)%p
        t3 = 1

        if ((q1%8)==5):
            t3 = p-1
        b1[1] = 0

    if (q1%4)==3:
        m[0] = [0,0,0,0,     0,0,0,0,
                0,p-1,0,p-1, 1,0,1,0]
        b1[0] = (p+1)//2

        t3 = (2*t2)%p
        t4 = (p-t3)%p
        t6 = (2*t1)%p
        t5 = (p-t6)%p
        m[1] = [t3,t5,t4,t6,  t4,t6,t3,t5,
                0,0,0,0,      0,0,0,0]

        t3 = (t1*a4[1])%p
        t4 = (t2*a4[0])%p
        print("\n \n in init32 t3 = {0} t4 = {1}".format(t3,t4))
        t4 = (p-t4)%p
        t4 = (t3+t4)%p
        t3 = 1

        if ((q1%8)==7):
            t3 = p-1
        b1[1] = (t3*t4)%p
              

    if (q1%4)==3:
        t1 = a4[0]
        t2 = a4[1]
        m[2] = [0,0,t1,t2, 0,0,t1,t2,
                0,0,0,0,   1,0,p-1,0]
        b1[2] = 0

        t2 = (p-a4[1])%p
        m[3] = [0,0,t2,t1, 0,0,t2,t1,
                0,0,0,0,   0,1,0,p-1]
        b1[3] = 0

        t1 = (p-a4[0])%p
        t2 = a4[1]
        m[4] = [t2,t1,0,0, t2,t1,0,0,
                p-1,0,1,0, 0,0,0,0]
        b1[4] = 0

        t1 = a4[0]
        t2 = a4[1]
        m[5] = [t1,t2,0,0, t1,t2,0,0,
                0,p-1,0,1, 0,0,0,0]
        b1[5] = 0

    if (q1%4)==1:
        t1 = a4[0]
        t2 = a4[1]
        m[2] = [t1,t2,0,0, t1,t2,0,0,
                0,0,0,0,   1,0,p-1,0]
        b1[2] = 0

        t2 = (p-a4[1])%p
        m[3] = [t2,t1,0,0, t2,t1,0,0,
                0,0,0,0,   0,1,0,p-1]
        b1[3] = 0

        t1 = (p-a4[0])%p
        t2 = a4[1]
        m[4] = [0,0,t2,t1, 0,0,t2,t1,
                p-1,0,1,0, 0,0,0,0]
        b1[4] = 0

        t1 = a4[0]
        t2 = a4[1]
        m[5] = [0,0,t1,t2, 0,0,t1,t2,
                0,p-1,0,1, 0,0,0,0]
        b1[5] = 0
        

    equation22(a4,m,b1,6,q,p)
    
    equation23(a2,m,b1,7,q,p)      
        
    return(m,b1)



""" For the output to be correct the prime p
should be of the form 32n+1 where gcd(2,n) = 1
This shows 9 equations stored in the array m
from m[0] to m[8] and in the vector b3
If n = 1 mod 4 then all equations are equal to 0
If n = 3 mod 4 then three equations are nonzero
and the other six are zero.
"""



p1 = [3169,3361,3617,4001,4129,4513,5153,5281,5857,7393]

p = p1[8]

print("\n \n p = ",p)
print("\n \n")

k = group(0,p)
q = (p-1)//2

k.f32(0,0,2)
k16 = k.k32(q,2)

m,b1 = init32(k,q)



b2 = init2(16)
for i in range(16):
    b2[i] = multcnvl2(m[i],k16,p)

b3 = init2(16)
b3[:] = b1

print("\n \n b2 = ",b2)
print("\n \n b3 = ",b3)              


v1 = init2(16)
print("\n \n")
display(0,15,0,15,m,v1)
h1 = init2(16)
solve2(16,m,v1,p)
t1 = det(16,m)
print("\n \n det = ",t1)
display(0,15,0,15,m,v1)
l2solve(16,h1,v1,m,p)
print("after solve2 = ",h1)
print("\n \n")



p = 3169
k = group(0,p)
a3 = exp2a(1*(p-1)//16,k.a2,p)
for i in range(16):
    a4 = exp2a(1*i,a3,p)
    a5 = exp2a(3*i,a3,p)
    a6 = exp2a(6*i,a3,p)
    a7 = exp2a(16*i,a3,p)
    
    t3 = 16*(a4[0]*a5[0])**2%p
    t4 = 16*(a4[1]*a5[1])**2%p    
    
    print(i,t4)


